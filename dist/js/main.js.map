{"version":3,"file":"main.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACoC;AACpC;AACA;AACA;AACO,yBAAyB,6CAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,gBAAgB;AACpD;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,YAAY;AAC9E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC,eAAe,iBAAiB;AAChC;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC,eAAe,iBAAiB;AAChC,eAAe,iBAAiB;AAChC;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC,eAAe,iBAAiB;AAChC,eAAe,iBAAiB;AAChC,eAAe,iBAAiB;AAChC;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,UAAU,SAAS,GAAG;AACpE,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;AC7RA;AACA;AACA;AACO;AACP;AACA,2BAA2B;AAC3B,4BAA4B;AAC5B,2BAA2B;AAC3B,4BAA4B;AAC5B,8BAA8B;AAC9B,kCAAkC;AAClC,gCAAgC;AAChC,0CAA0C;AAC1C,wCAAwC;AACxC,oCAAoC;AACpC,kCAAkC;AAClC,mCAAmC;AACnC,wCAAwC;AACxC,kCAAkC;AAClC,gCAAgC;AAChC,kCAAkC;AAClC,0CAA0C;AAC1C,0CAA0C;AAC1C,sCAAsC;AACtC,gCAAgC;AAChC,sCAAsC;AACtC,kCAAkC;AAClC,kCAAkC;AAClC,oCAAoC;AACpC,gCAAgC;AAChC,gCAAgC;AAChC,oCAAoC;AACpC,gCAAgC;AAChC,oCAAoC;AACpC,8BAA8B;AAC9B,+BAA+B;AAC/B,mCAAmC;AACnC,wCAAwC;AACxC,yCAAyC;AACzC,2CAA2C;AAC3C,uCAAuC;AACvC,yCAAyC;AACzC,iDAAiD;AACjD,gDAAgD;AAChD,+CAA+C;AAC/C,4CAA4C;AAC5C,mCAAmC;AACnC,iCAAiC;AACjC,uCAAuC;AACvC,4DAA4D;AAC5D,6BAA6B;AAC7B,gCAAgC;AAChC,kCAAkC;AAClC;AACA;AACA;;;;;;;;;;;;;;;ACvDA;AACA;AACA;AACkC;AAClC;AACA;AACA;AACO,sBAAsB,2CAAM;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B,mBAAmB,SAAS;AAC5B,mBAAmB,SAAS;AAC5B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B,mBAAmB,SAAS;AAC5B,mBAAmB,SAAS;AAC5B;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sBAAsB;AACrC;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,SAAS;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC,eAAe,iBAAiB;AAChC,eAAe,iBAAiB;AAChC;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC,eAAe,iBAAiB;AAChC,eAAe,iBAAiB;AAChC,eAAe,iBAAiB;AAChC,eAAe,iBAAiB;AAChC,eAAe,iBAAiB;AAChC,eAAe,iBAAiB;AAChC;AACA,gBAAgB;AAChB;AACA,sFAAsF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC,eAAe,iBAAiB;AAChC,eAAe,iBAAiB;AAChC,eAAe,iBAAiB;AAChC,eAAe,iBAAiB;AAChC,eAAe,iBAAiB;AAChC,eAAe,iBAAiB;AAChC;AACA,gBAAgB;AAChB;AACA,qFAAqF;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB,eAAe,UAAU;AACzB,eAAe,UAAU;AACzB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA,gBAAgB;AAChB;AACA;AACA,qCAAqC,sBAAsB;AAC3D;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,eAAe;AAC9B,eAAe,QAAQ;AACvB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC,eAAe,QAAQ;AACvB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,eAAe;AAC9B,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,eAAe;AAC9B,eAAe,UAAU;AACzB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sBAAsB;AACrC;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACzqBa;AACb;;GAEG;AACkE;AAGrE;;GAEG;AACI,MAAM,SAAU,SAAQ,+EAAU;IA2GrC;;;;;OAKG;IACH,YAAY,SAA4B,EAAE,UAAiB,EAAE;QACzD,2BAA2B;QAC3B,KAAK,EAAE,CAAC;QAjHZ;;WAEG;QACH,YAAY;QACL,kBAAa,GAAmB,WAAW,CAAC;QAC5C,sBAAiB,GAAe,MAAM,CAAC;QACvC,uBAAkB,GAAc,OAAO,CAAC;QACxC,0BAAqB,GAAW,UAAU,CAAC;QAC3C,yB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","sources":["webpack://Slideshow/webpack/universalModuleDefinition","webpack://Slideshow/./node_modules/polaris-core/dist/js/modules/Animations.js","webpack://Slideshow/./node_modules/polaris-core/dist/js/modules/Config.js","webpack://Slideshow/./node_modules/polaris-core/dist/js/modules/Helpers.js","webpack://Slideshow/./src/ts/modules/Slideshow.ts","webpack://Slideshow/webpack/bootstrap","webpack://Slideshow/webpack/runtime/define property getters","webpack://Slideshow/webpack/runtime/hasOwnProperty shorthand","webpack://Slideshow/webpack/runtime/make namespace object","webpack://Slideshow/./src/ts/main.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Slideshow\"] = factory();\n\telse\n\t\troot[\"Slideshow\"] = factory();\n})(self, () => {\nreturn ","/**\r\n * Import the parent Class\r\n */\r\nimport { Helpers } from \"./Helpers\";\r\n/**\r\n * @desc Used for setting & handling animations\r\n */\r\nexport class Animations extends Helpers {\r\n    /**\r\n     * @desc Constructor method\r\n     */\r\n    constructor() {\r\n        // Inherit the parent class\r\n        super();\r\n    }\r\n    /**\r\n     * @desc Sets and returns a new animation Promise\r\n     *\r\n     * @param {any}     selector  -- The selector name (object)\r\n     * @param {string}  animation -- The animation name\r\n     * @param {boolean} clear     -- For clearing the animation after it has been ended\r\n     *\r\n     * @return {any}\r\n     */\r\n    animation(selector, animation = \"\", clear = false) {\r\n        let node = null;\r\n        // Check the selectors\r\n        if (this.check(selector)['status']) {\r\n            if (typeof (selector) === \"string\") {\r\n                node = document.querySelector(selector);\r\n            }\r\n            else if (typeof (selector) === \"object\") {\r\n                node = selector;\r\n            }\r\n        }\r\n        else {\r\n            throw this.check(selector)['message'];\r\n        }\r\n        // Check animation\r\n        if (animation == \"\") {\r\n            // Unset the animation\r\n            // node.removeAttribute('data-animation');\r\n            node.style.removeProperty('animation-name');\r\n            // Exit the method\r\n            return false;\r\n        }\r\n        // // Check current animation\r\n        // if (this.getStyle(selector, 'animation-name') == animation) {\r\n        //     // TODO\r\n        // }\r\n        // // Wait for all animations to be finished\r\n        // Promise.all(\r\n        //     node.getAnimations({ subtree: false })\r\n        //     .map((animation:any) => animation.finished)\r\n        // ).then(() => {\r\n        //     // TODO\r\n        // });\r\n        // Animation promise\r\n        const promise = new Promise((resolve, reject) => {\r\n            // Check datasets and set variables\r\n            this.datasets(node);\r\n            // Set the new animation\r\n            // node.setAttribute(\"data-animation\", animation);\r\n            node.style.setProperty('animation-name', animation);\r\n            // Animation resolve callback\r\n            function animationEnd(event) {\r\n                event.stopPropagation();\r\n                // Check animation clearance\r\n                if (clear) {\r\n                    // node.removeAttribute('data-animation');\r\n                    node.style.removeProperty('animation-name');\r\n                }\r\n                // Promise on resolve\r\n                resolve('Animation ended!');\r\n                // Promise on reject\r\n                reject('Animation crashed!');\r\n            }\r\n            // Animation end listener\r\n            node.addEventListener('animationend', animationEnd, { once: true });\r\n        });\r\n        // Return the promise\r\n        return promise;\r\n    }\r\n    /**\r\n     * @desc Checks animation datasets and sets relevant variables\r\n     *\r\n     * @param {object} selector -- The selector object\r\n     *\r\n     * @return {void}\r\n     */\r\n    datasets(selector) {\r\n        // data-animation\r\n        if (selector.dataset.animation) {\r\n            selector.style.setProperty('animation-name', selector.dataset.animation);\r\n        }\r\n        // data-duration\r\n        if (selector.dataset.duration) {\r\n            selector.style.setProperty('--animation-duration', selector.dataset.duration);\r\n        }\r\n        // data-delay\r\n        if (selector.dataset.delay) {\r\n            selector.style.setProperty('--animation-delay', selector.dataset.delay);\r\n        }\r\n        // data-count\r\n        if (selector.dataset.count) {\r\n            selector.style.setProperty('--animation-count', selector.dataset.count);\r\n        }\r\n        // data-function\r\n        if (selector.dataset.function) {\r\n            selector.style.setProperty('--animation-function', selector.dataset.function);\r\n        }\r\n        // data-state\r\n        if (selector.dataset.state) {\r\n            selector.style.setProperty('--animation-state', selector.dataset.state);\r\n        }\r\n        // data-position\r\n        if (selector.dataset.position) {\r\n            selector.style.setProperty('--animation-position', selector.dataset.position);\r\n        }\r\n        // data-scale\r\n        if (selector.dataset.scale) {\r\n            selector.style.setProperty('--animation-scale', selector.dataset.scale);\r\n        }\r\n        // data-perspective\r\n        if (selector.dataset.perspective) {\r\n            selector.style.setProperty('--animation-perspective', selector.dataset.perspective);\r\n        }\r\n        // data-degree\r\n        if (selector.dataset.degree) {\r\n            selector.style.setProperty('--animation-degree', selector.dataset.degree);\r\n        }\r\n        // data-height\r\n        if (selector.dataset.height) {\r\n            selector.style.setProperty('--animation-height', selector.dataset.height);\r\n        }\r\n        // data-width\r\n        if (selector.dataset.width) {\r\n            selector.style.setProperty('--animation-width', selector.dataset.width);\r\n        }\r\n        // data-brightness\r\n        if (selector.dataset.brightness) {\r\n            selector.style.setProperty('--animation-brightness', selector.dataset.brightness);\r\n        }\r\n        // data-dimension\r\n        if (selector.dataset.dimension) {\r\n            selector.style.setProperty('--animation-dimension', selector.dataset.dimension);\r\n        }\r\n    }\r\n    /**\r\n     * @desc Makes selectors animated\r\n     *\r\n     * @param {string | object} selector -- The selector name (object)\r\n     * @param {string}          mod      -- The scroll mod\r\n     *\r\n     * @return {void}\r\n     */\r\n    animated(selector, mod = 'bottom') {\r\n        let nodes = null;\r\n        // Check the selectors\r\n        if (this.check(selector)['status']) {\r\n            if (typeof (selector) === \"string\") {\r\n                nodes = document.querySelectorAll(selector);\r\n            }\r\n            else if (typeof (selector) === \"object\") {\r\n                nodes = selector;\r\n            }\r\n        }\r\n        else {\r\n            throw this.check(selector)['message'];\r\n        }\r\n        nodes.forEach((node) => {\r\n            let tolerance = node.dataset.tolerance;\r\n            let animationEnter = node.dataset.enter;\r\n            let animationExit = node.dataset.exit;\r\n            // Check data-tolerance\r\n            if (!tolerance) {\r\n                tolerance = 0;\r\n            }\r\n            // Check data-enter\r\n            if (!animationEnter) {\r\n                animationEnter = 'fadeIn';\r\n            }\r\n            // Check data-exit\r\n            if (!animationExit) {\r\n                animationExit = 'fadeOut';\r\n            }\r\n            // Check element visibility\r\n            if (this.visible(node, mod, tolerance)) {\r\n                // Animation enter\r\n                this.animation(node, animationEnter);\r\n            }\r\n            else {\r\n                // Animation exit\r\n                this.animation(node, animationExit);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @desc Loops an animation\r\n     *\r\n     * @param {string | object} selector -- The selector name (object)\r\n     * @param {number}          duration -- The loop duration (in miliseconds)\r\n     * @param {number}          count    -- The loop count\r\n     *\r\n     * @return {void | boolean}\r\n     */\r\n    animating(selector, duration = 1000, count = Infinity) {\r\n        let node = null;\r\n        // Check the selectors\r\n        if (this.check(selector)['status']) {\r\n            if (typeof (selector) === \"string\") {\r\n                node = document.querySelector(selector);\r\n            }\r\n            else if (typeof (selector) === \"object\") {\r\n                node = selector;\r\n            }\r\n        }\r\n        else {\r\n            throw this.check(selector)['message'];\r\n        }\r\n        // Check element visibility\r\n        if (this.visible(node, \"both\", 0)) {\r\n            this.loop(() => {\r\n                let animation = node.getAttribute('data-animation');\r\n                // node.removeAttribute('data-animation');\r\n                node.style.removeProperty('animation-name');\r\n                node.offsetTop;\r\n                // node.setAttribute('data-animation', animation);\r\n                node.style.setProperty('animation-name', animation);\r\n            }, duration, count - 1);\r\n        }\r\n    }\r\n    /**\r\n     * @desc For navigation active class on page scroll\r\n     *\r\n     * @param {string | object} selector  -- The selector name (object)\r\n     * @param {string | object} navigator -- The navigator selector name (object)\r\n     * @param {string}          active    -- The navigator active class\r\n     * @param {number}          tolerance -- The scroll tolerance\r\n     *\r\n     * @return {void | boolean}\r\n     */\r\n    navigated(selector, navigator, active = 'active', tolerance = 0) {\r\n        let selectors = null;\r\n        let navigators = null;\r\n        // Check the selectors\r\n        if (this.check(selector)['status']) {\r\n            if (typeof (selector) === \"string\") {\r\n                selectors = document.querySelectorAll(selector);\r\n            }\r\n            else if (typeof (selector) === \"object\") {\r\n                selectors = selector;\r\n            }\r\n        }\r\n        else {\r\n            throw this.check(selector)['message'];\r\n        }\r\n        // Check the navigators\r\n        if (this.check(navigator)['status']) {\r\n            if (typeof (navigator) === \"string\") {\r\n                navigators = document.querySelectorAll(navigator);\r\n            }\r\n            else if (typeof (navigator) === \"object\") {\r\n                navigators = navigator;\r\n            }\r\n        }\r\n        else {\r\n            throw this.check(navigator)['message'];\r\n        }\r\n        // Navigation links\r\n        selectors.forEach((node) => {\r\n            let top = window.scrollY;\r\n            let height = node.offsetHeight;\r\n            let offset = node.offsetTop - tolerance;\r\n            let id = node.getAttribute(\"id\");\r\n            // Set the active class\r\n            if (top >= offset && top < offset + height) {\r\n                navigators.forEach((link) => {\r\n                    link.classList.remove(active);\r\n                    document.querySelector(`${navigator}[href*=${id}`).classList.add(active);\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=Animations.js.map","/**\r\n * @desc Used for the configuration of Polaris JS library\r\n */\r\nexport class Config {\r\n    constructor() {\r\n        this.modSep = \"-\"; // Modifier Separator\r\n        this.chiSep = \"--\"; // Child Separator\r\n        this.sibSep = \"_\"; // Sibling Separator\r\n        this.parSep = \"__\"; // Parent Separator\r\n        this.nameDoc = \"doc\"; // Name key for document component\r\n        this.nameLight = \"light\"; // Name key for light color\r\n        this.nameDark = \"dark\"; // Name key for dark color\r\n        this.nameAnimation = \"animation\"; // Name key for animation component\r\n        this.nameAnimated = \"animated\"; // Name key for animation-animated\r\n        this.nameRipple = \"ripple\"; // Name key for ripple component\r\n        this.nameAlert = \"alert\"; // Name key for alert component\r\n        this.nameMessages = \"msg\"; // Name key for msg component\r\n        this.nameBackdrop = \"backdrop\"; // Name key for backdrop component\r\n        this.namePopup = \"popup\"; // Name key for popup component\r\n        this.nameMenu = \"menu\"; // Name key for menu component\r\n        this.nameModal = \"modal\"; // Name key for modal component\r\n        this.nameBlueprint = \"blueprint\"; // Name key for component's blueprint\r\n        this.nameContainer = \"container\"; // Name key for container\r\n        this.nameControl = \"control\"; // Name key for control\r\n        this.nameIcon = \"icon\"; // Name key for icon\r\n        this.nameContent = \"content\"; // Name key for content\r\n        this.nameClose = \"close\"; // Name key for close\r\n        this.nameClick = \"click\"; // Name key for click\r\n        this.nameActive = \"active\"; // Name key for active\r\n        this.nameVoid = \"void\"; // Name key for active\r\n        this.nameOpen = \"open\"; // Name key for open inffix\r\n        this.nameHeader = \"header\"; // Name key for header\r\n        this.nameBody = \"body\"; // Name key for body\r\n        this.nameFooter = \"footer\"; // Name key for footer\r\n        this.nameWidth = \"w\"; // Name key for css width classes\r\n        this.nameHeight = \"h\"; // Name key for css height classes\r\n        this.nameRadius = \"round\"; // Name key for border-radius & component roundness\r\n        this.namePosition = \"position\"; // Name key for position classes\r\n        this.fadeInAnimation = \"fadeIn\"; // fadeIn animation\r\n        this.fadeOutAnimation = \"fadeOut\"; // fadeOut animation\r\n        this.hideYAnimation = \"hideY\"; // hideY animation\r\n        this.rippleAnimation = \"ripple\"; // ripple animation\r\n        this.rippleAutoAnimation = \"rippleAuto\"; // rippleAuto animation\r\n        this.piAlertCircle = \"pi-alert-circle\"; // Polaris Icon: alert-circle\r\n        this.piAlertTri = \"pi-alert-triangle\"; // Polaris Icon: alert-triangle\r\n        this.piAlertTick = \"pi-alert-tick\"; // Polaris Icon: alert-tick\r\n        this.piClose = \"pi-close\"; // Polaris Icon: close\r\n        this.hideTimeout = 8000; // Default hide timeout (in miliseconds)\r\n        this.alertPosition = \"bottom\"; // Alert default position\r\n        this.polarisSizes = ['xs', 'sm', 'md', 'lg', 'xl']; // Polaris standard sizes\r\n        this.phoneWidth = 0; // Smartphone min-width\r\n        this.tabletWidth = 768; // Tablet min-width\r\n        this.desktopWidth = 1280; // Desktop min-width\r\n    }\r\n}\r\n//# sourceMappingURL=Config.js.map","/**\r\n * Import the parent Class\r\n */\r\nimport { Config } from \"./Config\";\r\n/**\r\n * @desc Polaris JS helper methods\r\n */\r\nexport class Helpers extends Config {\r\n    /**\r\n     * @desc Constructor method\r\n     */\r\n    constructor() {\r\n        // Inherit the parent class\r\n        super();\r\n        /**\r\n         * @desc For removeing character(s) in a string before some character(s)\r\n         *\r\n         * @param {string}  str    -- The string to format\r\n         * @param {string}  find   -- The character(s) to find\r\n         * @param {boolean} strict -- Remove the character itself?\r\n         *\r\n         * @return {string | undefined}\r\n         */\r\n        this.removeBefore = (str, find, strict = false) => {\r\n            if (strict) {\r\n                return str.split(find).pop();\r\n            }\r\n            else {\r\n                return find + str.split(find).pop();\r\n            }\r\n        };\r\n        /**\r\n         * @desc For removeing character(s) in a string after some character(s)\r\n         *\r\n         * @param {string}  str    -- The string to format\r\n         * @param {string}  find   -- The character(s) to find\r\n         * @param {boolean} strict -- Remove the character itself?\r\n         *\r\n         * @return {string}\r\n         */\r\n        this.removeAfter = (str, find, strict = false) => {\r\n            if (strict) {\r\n                return str.split(find)[0];\r\n            }\r\n            else {\r\n                return str.split(find)[0] + find;\r\n            }\r\n        };\r\n    }\r\n    /**\r\n     * @desc Checks a selector for type & existence\r\n     *\r\n     * @param {string | HTMLElement} selector -- The selector name (object)\r\n     *\r\n     * @return {object}\r\n     */\r\n    check(selector = null) {\r\n        // Default variables\r\n        let result = {};\r\n        // Set the default result response\r\n        result = {\r\n            status: true,\r\n            message: `Passed!`\r\n        };\r\n        // Empty or null selector\r\n        if (!selector) {\r\n            result = {\r\n                status: false,\r\n                message: `The \"selector\" parameter cannot be empty or null.`\r\n            };\r\n        }\r\n        // String type\r\n        else if (typeof (selector) === \"string\") {\r\n            if (document.querySelectorAll(selector).length == 0) {\r\n                result = {\r\n                    status: false,\r\n                    message: `The selector \"${selector}\" not exists on the window object!`\r\n                };\r\n            }\r\n        }\r\n        // Object type\r\n        else if (typeof (selector) === \"object\") {\r\n            if (selector.length == 0) {\r\n                result = {\r\n                    status: false,\r\n                    message: `The selector object not exists on the window object!`\r\n                };\r\n            }\r\n        }\r\n        // Return the result\r\n        return result;\r\n    }\r\n    /**\r\n     * @desc Produces the querySelector object\r\n     *\r\n     * @param {string} selector -- The selector name\r\n     *\r\n     * @return {object}\r\n     */\r\n    selector(selector) {\r\n        // Check selector\r\n        if (typeof (selector) !== \"string\") {\r\n            throw `The selector must be of type \"string\".`;\r\n        }\r\n        else if (this.check(selector)['status']) {\r\n            // Return the result\r\n            return document.querySelector(selector);\r\n        }\r\n        else {\r\n            throw this.check(selector)['message'];\r\n        }\r\n    }\r\n    /**\r\n     * @desc Produces the querySelectorAll object\r\n     *\r\n     * @param {string} selector -- The selector name\r\n     *\r\n     * @return {object}\r\n     */\r\n    selectors(selector) {\r\n        // Check selector\r\n        if (typeof (selector) !== \"string\") {\r\n            throw `The selector must be of type \"string\".`;\r\n        }\r\n        else if (this.check(selector)['status']) {\r\n            // Return the result\r\n            return document.querySelectorAll(selector);\r\n        }\r\n        else {\r\n            throw this.check(selector)['message'];\r\n        }\r\n    }\r\n    /**\r\n     * @desc Checks if an element is visible on the screen\r\n     *\r\n     * @param {string | object} selector  -- The selector name (object)\r\n     * @param {string}          from      -- Visible from (top, bottom, or both)\r\n     * @param {number}          tolerance -- The scroll tolerance\r\n     *\r\n     * @return {boolean}\r\n     */\r\n    visible(selector, from = 'both', tolerance = 0) {\r\n        let result = false;\r\n        let rect = null;\r\n        let windowHeight = window.innerHeight;\r\n        let viewHeight = Math.max(document.documentElement.clientHeight, windowHeight);\r\n        // Check the selector\r\n        if (this.check(selector)['status']) {\r\n            if (typeof (selector) === \"string\") {\r\n                rect = document.querySelector(selector);\r\n                rect = rect.getBoundingClientRect();\r\n            }\r\n            else if (typeof (selector) === \"object\") {\r\n                rect = selector.getBoundingClientRect();\r\n            }\r\n        }\r\n        else {\r\n            throw this.check(selector)['message'];\r\n        }\r\n        // Scroll top & bottom\r\n        if (from == 'both') {\r\n            result = rect.bottom >= tolerance && rect.top < viewHeight - tolerance;\r\n        }\r\n        // Scroll top\r\n        else if (from == 'top') {\r\n            result = rect.top < viewHeight - tolerance;\r\n        }\r\n        // Scroll bottom\r\n        else if (from == 'bottom') {\r\n            result = rect.bottom >= tolerance;\r\n        }\r\n        // Return result\r\n        return result;\r\n    }\r\n    /**\r\n     * @desc Prepends an HTML element to a parent element\r\n     *\r\n     * @param {string}          selector  -- The selector name\r\n     * @param {string | object} parent    -- The selector's parent name (object)\r\n     * @param {string}          content   -- The selector's content\r\n     * @param {object}          classList -- The selector's class list ['class-1', 'class-2', ...]\r\n     * @param {string}          id        -- The selector's id name\r\n     * @param {string}          style     -- The selector's inline CSS styles\r\n     * @param {object}          attrs     -- The selector's attributes\r\n     *\r\n     * @return {HTMLElement | boolean}\r\n     */\r\n    prepend(selector, parent, content, classList = [], id = \"\", style = \"\", attrs = {}) {\r\n        let parentNode = null;\r\n        // Check the selector\r\n        if (typeof (selector) !== \"string\") {\r\n            throw `The selector must be of type \"string\".`;\r\n        }\r\n        // Check the parent\r\n        if (this.check(parent)['status']) {\r\n            if (typeof (parent) === \"string\") {\r\n                parentNode = document.querySelector(parent);\r\n            }\r\n            else if (typeof (parent) === \"object\") {\r\n                parentNode = parent;\r\n            }\r\n        }\r\n        else {\r\n            throw this.check(parent)['message'];\r\n        }\r\n        // Create the node\r\n        const node = document.createElement(selector);\r\n        // Add class list\r\n        classList.forEach((cls) => {\r\n            node.classList.add(cls);\r\n        });\r\n        // Add id\r\n        if (id) {\r\n            node.setAttribute(\"id\", id);\r\n        }\r\n        // Add style\r\n        if (style) {\r\n            node.style.cssText = style;\r\n        }\r\n        // Add attributes\r\n        if (attrs) {\r\n            for (let attr in attrs) {\r\n                node.setAttribute(attr, attrs[attr]);\r\n            }\r\n        }\r\n        // Prepend the node\r\n        node.innerHTML = content;\r\n        parentNode.insertBefore(node, parentNode.firstChild);\r\n        // Return the node\r\n        return node;\r\n    }\r\n    /**\r\n     * @desc Appends an HTML element to a parent element\r\n     *\r\n     * @param {string}          selector  -- The selector name\r\n     * @param {string | object} parent    -- The selector's parent name (object)\r\n     * @param {string}          content   -- The selector's content\r\n     * @param {object}          classList -- The selector's class list ['class-1', 'class-2', ...]\r\n     * @param {string}          id        -- The selector's id name\r\n     * @param {string}          style     -- The selector's inline CSS styles\r\n     * @param {object}          attrs     -- The selector's attributes\r\n     *\r\n     * @return {HTMLElement | boolean}\r\n     */\r\n    append(selector, parent, content, classList = [], id = \"\", style = \"\", attrs = {}) {\r\n        let parentNode = null;\r\n        // Check the selector\r\n        if (typeof (selector) !== \"string\") {\r\n            throw `The selector must be of type \"string\".`;\r\n        }\r\n        // Check the parent\r\n        if (this.check(parent)['status']) {\r\n            if (typeof (parent) === \"string\") {\r\n                parentNode = document.querySelector(parent);\r\n            }\r\n            else if (typeof (parent) === \"object\") {\r\n                parentNode = parent;\r\n            }\r\n        }\r\n        else {\r\n            throw this.check(parent)['message'];\r\n        }\r\n        // Create the node\r\n        const node = document.createElement(selector);\r\n        // Add class list\r\n        classList.forEach((cls) => {\r\n            node.classList.add(cls);\r\n        });\r\n        // Add id\r\n        if (id) {\r\n            node.setAttribute(\"id\", id);\r\n        }\r\n        // Add style\r\n        if (style) {\r\n            node.style.cssText = style;\r\n        }\r\n        // Add attributes\r\n        if (attrs) {\r\n            for (let attr in attrs) {\r\n                node.setAttribute(attr, attrs[attr]);\r\n            }\r\n        }\r\n        // Append the node\r\n        node.innerHTML = content;\r\n        parentNode.appendChild(node);\r\n        // Return the node\r\n        return node;\r\n    }\r\n    /**\r\n     * @desc Removes an HTML element from the DOM\r\n     *\r\n     * @param {string | object} selector -- The selector name (object)\r\n     *\r\n     * @return {void | boolean}\r\n     */\r\n    remove(selector) {\r\n        let node = null;\r\n        // Check the selectors\r\n        if (this.check(selector)['status']) {\r\n            if (typeof (selector) === \"string\") {\r\n                node = document.querySelector(selector);\r\n            }\r\n            else if (typeof (selector) === \"object\") {\r\n                node = selector;\r\n            }\r\n        }\r\n        else {\r\n            throw this.check(selector)['message'];\r\n        }\r\n        // Remove the node\r\n        node.remove();\r\n    }\r\n    /**\r\n     * @desc For writing the whole document\r\n     *\r\n     * @param {string} content -- The document content\r\n     *\r\n     * @return {void}\r\n     */\r\n    write(content = \"\") {\r\n        javascript: document.open('text/html');\r\n        document.write(content);\r\n        document.close();\r\n    }\r\n    /**\r\n     * @desc Loops a function for a couple of times\r\n     *\r\n     * @param {function} fn    -- The function that needed to be looped\r\n     * @param {number}   delay -- The time delay for each iteration\r\n     * @param {number}   count -- The loop count\r\n     *\r\n     * @return {void}\r\n     */\r\n    loop(fn, delay = 1000, count = Infinity) {\r\n        let i = 0;\r\n        let interval = setInterval(() => {\r\n            // Exit the loop\r\n            if (i == count || count <= 0) {\r\n                clearInterval(interval);\r\n                return false;\r\n            }\r\n            // Invoke the function\r\n            fn();\r\n            i++;\r\n        }, delay);\r\n    }\r\n    /**\r\n     * @desc Excecutes a function after document fully loaded\r\n     *\r\n     * @param {function} fn -- The callback function\r\n     *\r\n     * @return {void}\r\n     */\r\n    loaded(fn) {\r\n        return document.addEventListener('DOMContentLoaded', () => {\r\n            fn();\r\n        });\r\n    }\r\n    /**\r\n     * @desc For escaping Regular Expression search characters\r\n     *\r\n     * @param {string} str -- The string to format\r\n     *\r\n     * @return {string}\r\n     */\r\n    escape(str) {\r\n        return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\r\n    }\r\n    /**\r\n     * @desc For replacing character(s) in a string\r\n     *\r\n     * @param {string} str     -- The string to format\r\n     * @param {string} find    -- The character(s) to find\r\n     * @param {string} replace -- The character(s) to replace\r\n     *\r\n     * @return {string}\r\n     */\r\n    replace(str, find, replace) {\r\n        return str.replace(new RegExp(this.escape(find), 'g'), replace);\r\n    }\r\n    /**\r\n     * @desc For redirecting http URLs\r\n     *\r\n     * @param {string} url -- The URL to redirect\r\n     *\r\n     * @return {void}\r\n     */\r\n    redirect(url = \"/\") {\r\n        window.location.href = url;\r\n    }\r\n    /**\r\n     * @desc Finds page relative href\r\n     *\r\n     * @return {string}\r\n     */\r\n    href() {\r\n        return this.replace(window.location.href, window.location.origin, \"\");\r\n    }\r\n    /**\r\n     * @desc Calculates the scrollbar width\r\n     *\r\n     * @return {number}\r\n     */\r\n    scrollWidth() {\r\n        return window.innerWidth - document.documentElement.clientWidth;\r\n    }\r\n    /**\r\n     * @desc Checks a file for existence\r\n     *\r\n     * @param {string} file -- The absolute file path\r\n     *\r\n     * @return {boolean}\r\n     */\r\n    exist(file) {\r\n        // Create a new XML HTTP Request\r\n        let xhr = new XMLHttpRequest();\r\n        // Request the file\r\n        xhr.open('HEAD', file, false);\r\n        xhr.send();\r\n        // File not found\r\n        if (xhr.status == \"404\") {\r\n            return false;\r\n        }\r\n        // File found\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n    /**\r\n     * @desc Reads and returns a file content as a promise in JSON format\r\n     *\r\n     * @param {string} file -- The absolute file path\r\n     *\r\n     * @return {object|boolean}\r\n     */\r\n    json(file, strict = false) {\r\n        // Check strict mod\r\n        if (strict) {\r\n            // Check file existence\r\n            if (!this.exist(file)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Create a new promise\r\n        const promise = new Promise((resolve, reject) => {\r\n            let final = null;\r\n            // Fetch file\r\n            fetch(file)\r\n                .then(response => response.json())\r\n                .then(result => {\r\n                final = result;\r\n            })\r\n                .then(() => {\r\n                // Resolve the promise\r\n                resolve(final);\r\n            });\r\n        });\r\n        // Return the promise\r\n        return promise;\r\n    }\r\n    /**\r\n     * @desc Reads and returns a file content as a promise in plain text\r\n     *\r\n     * @param {string} file -- The absolute file path\r\n     *\r\n     * @return {object|boolean}\r\n     */\r\n    text(file, strict = false) {\r\n        // Check strict mod\r\n        if (strict) {\r\n            // Check file existence\r\n            if (!this.exist(file)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Create a new promise\r\n        const promise = new Promise((resolve, reject) => {\r\n            let final = null;\r\n            // Fetch file\r\n            fetch(file)\r\n                .then(response => response.text())\r\n                .then(result => {\r\n                final = result;\r\n            })\r\n                .then(() => {\r\n                // Resolve the promise\r\n                resolve(final);\r\n            });\r\n        });\r\n        // Return the promise\r\n        return promise;\r\n    }\r\n    /**\r\n     * @desc Creates a promise to copy a text to clipboard and returns the result\r\n     *\r\n     * @param {string} text -- The text to copy\r\n     *\r\n     * @return {void|boolean}\r\n     */\r\n    copy(text) {\r\n        // Create a new promise\r\n        const promise = new Promise((resolve, reject) => {\r\n            let result = null;\r\n            navigator.clipboard.writeText(text)\r\n                .then(() => result = true, err => {\r\n                console.error('Copy Error: ', err);\r\n                result = false;\r\n            })\r\n                .then(() => {\r\n                // Resolve the promise\r\n                resolve(result);\r\n            });\r\n        });\r\n        // Return the promise\r\n        return promise;\r\n    }\r\n    /**\r\n     * @desc Adds a class to a selector\r\n     *\r\n     * @param {string|object} selector -- The selector name (object)\r\n     * @param {string} cls             -- The class name\r\n     *\r\n     * @return {void}\r\n     */\r\n    addClass(selector, cls) {\r\n        let node = null;\r\n        // Check the selector\r\n        if (this.check(selector)['status']) {\r\n            if (typeof (selector) === \"string\") {\r\n                node = document.querySelector(selector);\r\n            }\r\n            else if (typeof (selector) === \"object\") {\r\n                node = selector;\r\n            }\r\n        }\r\n        else {\r\n            throw this.check(selector)['message'];\r\n        }\r\n        // Add the class\r\n        if (!node.classList.contains(cls)) {\r\n            node.classList.add(cls);\r\n        }\r\n    }\r\n    /**\r\n     * @desc Removes a class to a selector\r\n     *\r\n     * @param {string | object} selector -- The selector name (object)\r\n     * @param {string} cls               -- The class name\r\n     *\r\n     * @return {void}\r\n     */\r\n    removeClass(selector, cls) {\r\n        let node = null;\r\n        // Check the selector\r\n        if (this.check(selector)['status']) {\r\n            if (typeof (selector) === \"string\") {\r\n                node = document.querySelector(selector);\r\n            }\r\n            else if (typeof (selector) === \"object\") {\r\n                node = selector;\r\n            }\r\n        }\r\n        else {\r\n            throw this.check(selector)['message'];\r\n        }\r\n        // Remove the class\r\n        if (node.classList.contains(cls)) {\r\n            node.classList.remove(cls);\r\n        }\r\n    }\r\n    /**\r\n     * @desc Toggles an old class with a new class for a selector\r\n     *\r\n     * @param {string|object} selector -- The selector name (object)\r\n     * @param {string} clsOld          -- The old class name\r\n     * @param {string} clsNew          -- The new class name\r\n     *\r\n     * @return {void}\r\n     */\r\n    toggleClass(selector, clsOld, clsNew) {\r\n        let node = null;\r\n        // Check the selector\r\n        if (this.check(selector)['status']) {\r\n            if (typeof (selector) === \"string\") {\r\n                node = document.querySelector(selector);\r\n            }\r\n            else if (typeof (selector) === \"object\") {\r\n                node = selector;\r\n            }\r\n        }\r\n        else {\r\n            throw this.check(selector)['message'];\r\n        }\r\n        // Remove the old class\r\n        if (node.classList.contains(clsOld)) {\r\n            node.classList.remove(clsOld);\r\n        }\r\n        // Add the new class\r\n        if (!node.classList.contains(clsNew)) {\r\n            node.classList.add(clsNew);\r\n        }\r\n    }\r\n    /**\r\n     * @desc Adds a class list(array) to a selector\r\n     *\r\n     * @param {string|object} selector -- The selector name (object)\r\n     * @param {string[]} classList     -- The class list (array)\r\n     *\r\n     * @return {void}\r\n     */\r\n    addClasses(selector, classList) {\r\n        let node = null;\r\n        // Check the selector\r\n        if (this.check(selector)['status']) {\r\n            if (typeof (selector) === \"string\") {\r\n                node = document.querySelector(selector);\r\n            }\r\n            else if (typeof (selector) === \"object\") {\r\n                node = selector;\r\n            }\r\n        }\r\n        else {\r\n            throw this.check(selector)['message'];\r\n        }\r\n        // Loop classes\r\n        classList.forEach((cls) => {\r\n            // Add the class\r\n            if (!node.classList.contains(cls)) {\r\n                node.classList.add(cls);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @desc Converts and returns a string into uppercase, taking into account the current locale\r\n     *\r\n     * @param {string} text -- The text to excecute\r\n     *\r\n     * @return {string}\r\n     */\r\n    upper(text) {\r\n        return text.toLocaleUpperCase();\r\n    }\r\n    /**\r\n     * @desc Converts and returns a string into lowercase, taking into account the current locale\r\n     *\r\n     * @param {string} text -- The text to excecute\r\n     *\r\n     * @return {string}\r\n     */\r\n    lower(text) {\r\n        return text.toLocaleLowerCase();\r\n    }\r\n    /**\r\n     * @desc Returns the computed style for an element\r\n     *\r\n     * @param {string | HTMLElement} selector -- The node seclector\r\n     *\r\n     * @return {string}\r\n     */\r\n    getStyle(selector, property) {\r\n        let node, result;\r\n        // String type\r\n        if (typeof (selector) == \"string\") {\r\n            node = document.querySelectorAll(selector);\r\n        }\r\n        else {\r\n            node = selector;\r\n        }\r\n        // Property exists\r\n        const view = (node.ownerDocument || document).defaultView;\r\n        if (view && view.getComputedStyle) {\r\n            result = view.getComputedStyle(node, null).getPropertyValue(property);\r\n        }\r\n        // Property not exists\r\n        else {\r\n            result == undefined;\r\n        }\r\n        // Return result\r\n        return result;\r\n    }\r\n}\r\n//# sourceMappingURL=Helpers.js.map","\"use strict\";\r\n/**\r\n * Dependencies\r\n */\r\nimport { Animations } from \"polaris-core/dist/js/modules/Animations\";\r\n\r\n\r\n/**\r\n * @desc The Slideshow class for handling slideshow componet and its slides\r\n */\r\nexport class Slideshow extends Animations {\r\n\r\n    /**\r\n     * @desc Class properties\r\n     */\r\n    // Name keys\r\n    public nameSlideshow:         string = 'slideshow';\r\n    public nameSlideshowItem:     string = 'item';\r\n    public nameSlideshowMedia:    string = 'media';\r\n    public nameSlideshowOverlays: string = 'overlays';\r\n    public nameSlideshowOverlay:  string = 'overlay';\r\n    public nameSlideshowCaptions: string = 'captions';\r\n    public nameSlideshowCaption:  string = 'caption';\r\n    public nameSlideshowOption:   string = 'option';\r\n    public nameSlideshowProgress: string = 'progress';\r\n    public nameSlideshowCounter:  string = 'counter';\r\n    public nameSlideshowPrev:     string = 'prev';\r\n    public nameSlideshowNext:     string = 'next';\r\n    public nameSlideshowDots:     string = 'dots';\r\n    public nameSlideshowFilter:   string = 'filter';\r\n\r\n    // Slideshow selectors\r\n    private slideshow:         any     = null;\r\n    private slideshowItems:    any     = null;\r\n    private slideshowMedias:   any     = null; \r\n    private slideshowProgress: any     = null;\r\n    private slideshowCounter:  any     = null;\r\n    private slideshowPrev:     any     = null;\r\n    private slideshowNext:     any     = null;\r\n    private slideshowDots:     any     = null;\r\n\r\n    // Private properties\r\n    private itemsCount:        number  = 0;\r\n    private activeItem:        any     = null;\r\n    private activeDot:         any     = null;\r\n    private activeIndex:       number  = 0;\r\n    private animationEnter:    string  = this.fadeInAnimation;\r\n    private animationExit:     string  = this.fadeOutAnimation;\r\n    private slideInterval:     any     = null;\r\n    private timerInterval:     any     = null;\r\n    private pauseIntervals:    boolean = false;\r\n    private remainingTime:     number  = 0;\r\n    private sliding:           boolean = false;\r\n    private firstLoad:         boolean = true;\r\n    private mediaLoaded:       boolean = false;\r\n\r\n    // Default options\r\n    private mediaShrink:       boolean = true;\r\n    private isAutoplay:        boolean = false;\r\n    private hoverPause:        boolean = false;\r\n    private timeout:           number  = 6000;\r\n    private hasProgress:       boolean = false;\r\n    private hasCounter:        boolean = false;\r\n    private hasControls:       boolean = true;\r\n    private hasDots:           boolean = false;\r\n    private width:             any     = 0;\r\n    private height:            any     = 0;\r\n    private slideshowColor:    any     = 'auto';\r\n    private mediaFilter:       any     = null;\r\n    private mediaControls:     boolean = true;\r\n    private mediaAutoplay:     boolean = false;\r\n\r\n    // Slideshow options\r\n    private options: any = {\r\n        \"mediaShrink\":      this.mediaShrink,\r\n        'isAutoplay':       this.isAutoplay,\r\n        'hoverPause':       this.hoverPause,\r\n        'timeout':          this.timeout,\r\n        'hasProgress':      this.hasProgress,\r\n        'hasCounter':       this.hasCounter,\r\n        'hasControls':      this.hasControls,\r\n        'hasDots':          this.hasDots,\r\n        'round':            false,\r\n        'width':            null,\r\n        'height':           null,\r\n        'color':            this.slideshowColor,\r\n        'mediaControls':    this.mediaControls,\r\n        'mediaAutoplay':    this.mediaAutoplay,\r\n        'mediaFilter':      this.mediaFilter,\r\n        'phoneHeight':      null,\r\n        'tabletHeight':     null,\r\n        'desktopHeight':    null,\r\n        'mediaEnter':       null,\r\n        'mediaExit':        null,\r\n        'mediaEnterPrev':   null,\r\n        'mediaExitPrev':    null,\r\n        'mediaEnterNext':   null,\r\n        'mediaExitNext':    null,\r\n        'overlayEnter':     null,\r\n        'overlayExit':      null,\r\n        'overlayEnterPrev': null,\r\n        'overlayExitPrev':  null,\r\n        'overlayEnterNext': null,\r\n        'overlayExitNext':  null,\r\n        'captionEnter':     null,\r\n        'captionExit':      null,\r\n        'captionEnterPrev': null,\r\n        'captionExitPrev':  null,\r\n        'captionEnterNext': null,\r\n        'captionExitNext':  null,\r\n        'counterPosition':  null,\r\n        'dotsPosition':     null,\r\n        'captionsPosition': null,\r\n        'overlaysPosition': null,\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Constructor method\r\n     * \r\n     * @param {string|HTMLElement} slideshow -- The required slideshow selector\r\n     * @param {object}             options   -- The optional slideshow options\r\n     */\r\n    constructor(slideshow:string|HTMLElement, options:object = {}) {\r\n        // Inherit the parent class\r\n        super();\r\n\r\n        // Valid slideshow selector\r\n        if (this.check(slideshow)['status']) {\r\n            // String slideshow selector\r\n            if (typeof(slideshow) === \"string\") {\r\n                this.slideshow = document.querySelector(slideshow);\r\n            }\r\n            // HTMLElement slideshow selector\r\n            else if (typeof(slideshow) === \"object\") {\r\n                this.slideshow = slideshow;\r\n            }\r\n\r\n            // Set slideshow items\r\n            this.slideshowItems  = this.slideshow.querySelectorAll(`.${this.nameSlideshow + this.chiSep + this.nameSlideshowItem}`);\r\n            this.itemsCount      = this.slideshowItems.length;\r\n\r\n            // No slide\r\n            if (this.itemsCount == 0) {\r\n                throw 'No slide found!';\r\n            }\r\n    \r\n            // Set items media\r\n            this.slideshowMedias = this.slideshow.querySelectorAll(`.${this.nameSlideshow + this.chiSep + this.nameSlideshowMedia}`);\r\n    \r\n            // Update options\r\n            if (options) this.options = options;\r\n\r\n            // Check options\r\n            if (!('mediaShrink' in this.options))   this.options['mediaShrink']     = this.mediaShrink;\r\n            if (!('isAutoplay' in this.options))    this.options['isAutoplay']      = this.isAutoplay;\r\n            if (!('hoverPause' in this.options))    this.options['hoverPause']      = this.hoverPause;\r\n            if (!('timeout' in this.options))       this.options['timeout']         = this.timeout;\r\n            if (!('hasProgress' in this.options))   this.options['hasProgress']     = this.hasProgress;\r\n            if (!('hasCounter' in this.options))    this.options['hasCounter']      = this.hasCounter;\r\n            if (!('hasControls' in this.options))   this.options['hasControls']     = this.hasControls;\r\n            if (!('hasDots' in this.options))       this.options['hasDots']         = this.hasDots;\r\n            if (!('mediaControls' in this.options)) this.options['mediaControls']   = this.mediaControls;\r\n            if (!('mediaAutoplay' in this.options)) this.options['mediaAutoplay']   = this.mediaAutoplay;\r\n            if (!('color' in this.options))         this.options['color']           = this.slideshowColor\r\n            if (!('mediaFilter' in this.options))   this.options['mediaFilter']     = this.mediaFilter;\r\n    \r\n            // Start the slideshow\r\n            this.start();\r\n        }\r\n\r\n        // Invalid slideshow selector\r\n        else {\r\n            throw 'The \"slideshow\" property of the Slideshow class cannot be empty or null!';\r\n        }\r\n    }\r\n\r\n    \r\n    /**\r\n     * @desc Starts the Slideshow\r\n     * \r\n     * @return {void}\r\n     */\r\n    private start(): void {\r\n        // Set items\r\n        this.setItems();\r\n\r\n        // Set options\r\n        this.setOptions();\r\n        \r\n        // Previous Slide\r\n        this.prevSlide();\r\n        \r\n        // Next Slide\r\n        this.nextSlide();\r\n        \r\n        // Dots Slide\r\n        this.dotSlide();\r\n\r\n        // Slideshow events\r\n        this.slideEvents();\r\n\r\n        \r\n        /**\r\n         *  Set the deault slide\r\n         */\r\n         let interval = setInterval(() => {\r\n            // Fully loaded\r\n            if (this.mediaLoaded) {\r\n                this.setSlide(0);\r\n\r\n                // Clear the interval\r\n                clearInterval(interval);\r\n            }\r\n        }, 10);\r\n    }\r\n\r\n    \r\n    /**\r\n     * @desc Sets Slideshow items\r\n     * \r\n     * @var {HTMLElement}   media       -- The items media\r\n     * @var {HTMLElement[]} overlays    -- The items overlays \r\n     * @var {HTMLElement[]} captions    -- The items captions\r\n     * \r\n     * @return {void}\r\n     */\r\n    private setItems(): void {\r\n        // Loop items\r\n        for (let i = 0; i < this.itemsCount; i++) {\r\n            // Set data-index\r\n            this.slideshowItems[i].dataset.index = i;\r\n\r\n            // Item media\r\n            if (this.slideshowItems[i].querySelector(`.${this.nameSlideshow + this.chiSep + this.nameSlideshowMedia}`)) {\r\n                const media:any = this.slideshowItems[i].querySelector(`.${this.nameSlideshow + this.chiSep + this.nameSlideshowMedia}`);\r\n                    \r\n                // Add animation, animation-animated classList\r\n                this.addClasses(media, [this.nameAnimation, this.nameAnimation + this.modSep + this.nameAnimated]);\r\n                \r\n                // Set content for the media\r\n                this.setContent(media, 'media');\r\n\r\n                // Set the default slide active class\r\n                if (i == 0) {\r\n                    // Set the active class\r\n                    this.activeItem = this.slideshowItems[0];\r\n\r\n                    // Add active class to slide\r\n                    this.addClass(this.activeItem, this.nameActive);\r\n                }\r\n\r\n                // Set default --animation\r\n                media.style.setProperty('--animation', 'none');\r\n            }\r\n\r\n            // Item overlays\r\n            if (this.slideshowItems[i].querySelectorAll(`.${this.nameSlideshow + this.chiSep + this.nameSlideshowOverlay}`).length) {\r\n                const overlays:any[] = this.slideshowItems[i].querySelectorAll(`.${this.nameSlideshow + this.chiSep + this.nameSlideshowOverlay}`);\r\n                \r\n                // Set item overlays\r\n                overlays.forEach((overlay:any) => {\r\n                    // Add animation, animation-animated classList\r\n                    this.addClasses(overlay, [this.nameAnimation, this.nameAnimation + this.modSep + this.nameAnimated]);\r\n\r\n                    // Set content for overlays\r\n                    this.setContent(overlay);\r\n                \r\n                    // Set default --animation\r\n                    overlay.style.setProperty('--animation', 'none');\r\n                });\r\n            }\r\n\r\n            // Item captions\r\n            if (this.slideshowItems[i].querySelectorAll(`.${this.nameSlideshow + this.chiSep + this.nameSlideshowCaption}`).length) {\r\n                const captions:any[] = this.slideshowItems[i].querySelectorAll(`.${this.nameSlideshow + this.chiSep + this.nameSlideshowCaption}`);\r\n                \r\n                // Set item captions\r\n                captions.forEach((caption:any) => {\r\n                    // Add animation, animation-animated classList\r\n                    this.addClasses(caption, [this.nameAnimation, this.nameAnimation + this.modSep + this.nameAnimated]);\r\n                \r\n                    // Set default --animation\r\n                    caption.style.setProperty('--animation', 'none');\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Extract extension from a file name\r\n     * \r\n     * @param {string} file -- The file name to process\r\n     * \r\n     * @var {string} ext -- The file extension\r\n     * @var {array}  arr -- The file string array\r\n     * \r\n     * @return {string}\r\n     */\r\n    private fileExtension(file:string): string {\r\n        let ext: string   = '';\r\n        let arr: string[] = [];\r\n\r\n        // Set file array\r\n        arr = file.split('.');\r\n\r\n        // Set extension\r\n        ext = '.' + arr[arr.length - 1];\r\n\r\n        // Return the extracted extension\r\n        return ext;\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Sets the slide content\r\n     * \r\n     * @param {HTMLElement} node -- The node to set content for\r\n     * \r\n     * @var {HTMLElement} inner    -- The inner media element\r\n     * @var {string}      maxWidth -- Media images max-width\r\n     * @var {string}      alt      -- The image alternative text\r\n     * @var {string}      ext      -- The media extension\r\n     * @var {string}      type     -- The media MIME type\r\n     * @var {string}      controls -- The video controls\r\n     * @var {string}      muted    -- The muted video\r\n     * \r\n     * @return {void}\r\n     */\r\n    private setContent(node:any, mode:any=null): void {\r\n        let inner: any, index:number = 0, maxWidth:string = '', alt: string = '', ext: string = '', type: string = '', controls: string = '', muted: string = '';\r\n\r\n        // Check mode\r\n        if (mode == 'media') {\r\n            // Find index\r\n            index = Number(node.parentElement.dataset.index);\r\n\r\n            // Find extension\r\n            if (node.dataset.src) ext = this.fileExtension(node.dataset.src);\r\n\r\n            // Check mediaControls\r\n            if (this.options['mediaControls']) controls = ' controls';\r\n        }\r\n\r\n        // Media max-width\r\n        if (this.options['mediaShrink']) maxWidth = ' style=\"max-width: inherit;\"'\r\n\r\n        // Image\r\n        if (node.dataset.type == 'image') {\r\n            \r\n            // Check type\r\n            if (!['.webp', '.jpg', '.jpeg', '.apng', '.png', '.avif', '.gif', '.svg'].includes(ext)) {\r\n                throw `Unsupported image extension detected! \\nSupported image extensions are: ['.webp', '.jpg', '.jpeg', '.apng', '.png', '.avif', '.gif', '.svg']`\r\n            }\r\n\r\n            // Check alternative text\r\n            if (node.dataset.alt) alt = ` alt=\"${node.dataset.alt}\"`\r\n\r\n            // Set node content\r\n            node.innerHTML = `<img src=\"${node.dataset.src}\"${alt+maxWidth}>`;\r\n\r\n            // Set inner node\r\n            inner = node.querySelector('img');\r\n        }\r\n\r\n        // Video\r\n        else if (node.dataset.type == 'video') {\r\n            // Produce file type\r\n            if (ext == '.mp4')       type = 'video/mp4';\r\n            else if (ext == '.webm') type = 'video/webm';\r\n            else                     type = '';\r\n\r\n            // Check type\r\n            if (!type) {\r\n                throw `Unsupported video extension detected! \\nSupported video extensions are: ['.mp4', '.webm']`\r\n            }\r\n\r\n            // Check autoplay\r\n            if (this.options['mediaAutoplay']) {\r\n                muted = ' muted loop';\r\n            }\r\n\r\n\r\n            // Set node content\r\n            node.innerHTML = `<video preload=\"metadata\"${controls+muted+maxWidth}><source src=\"${node.dataset.src}\" type=\"${type}\"></video>`;\r\n\r\n            // Set inner node\r\n            inner = node.querySelector('video');\r\n        }\r\n\r\n        // HTML\r\n        else if (node.dataset.type == 'html') {\r\n            // Set node content\r\n            if (node.dataset.html) node.innerHTML = node.dataset.html\r\n\r\n            // Set inner node\r\n            if (node.firstElementChild) inner = node.firstElementChild;\r\n            else                        inner = node;\r\n        }\r\n\r\n        // Unknown\r\n        else {\r\n            throw 'Unsupported media format detected!';\r\n        }\r\n\r\n        // Check heigts\r\n        if (this.options['height'] || this.options['phoneHeight'] || this.options['tabletHeight'] || this.options['desktopHeight']) {\r\n            if (this.options['mediaShrink']) inner.style.maxHeight = '100%';\r\n        }\r\n\r\n        // Media mode        \r\n        if (mode == 'media') {\r\n            // Fetch inner size after loading\r\n            // Image\r\n            if (node.dataset.type == 'image') {\r\n                inner.onload = () => {\r\n                    // Set the default width\r\n                    if (!this.options['width'] && inner.naturalWidth > this.width) this.width = inner.naturalWidth;\r\n                    if (!this.options['width'] && inner.getBoundingClientRect().width > this.width) this.width = inner.getBoundingClientRect().width;\r\n\r\n                    // Set the default height\r\n                    if (!this.options['height'] && inner.clientHeight > this.height) this.height = inner.clientHeight;\r\n                    // if (!this.options['height'] && inner.getBoundingClientRect().height > this.height) this.height = inner.getBoundingClientRect().height;\r\n\r\n                    // Fully loaded\r\n                    if (index + 1 == this.itemsCount) this.mediaLoaded = true;\r\n                };\r\n            }\r\n            // Video\r\n            else if (node.dataset.type == 'video') {\r\n                inner.onloadedmetadata = () => {\r\n                    // Set the default width\r\n                    if (!this.options['width'] && inner.clientWidth > this.width) this.width = inner.clientWidth;\r\n                    if (!this.options['width'] && inner.getBoundingClientRect().width > this.width) this.width = inner.getBoundingClientRect().width;\r\n\r\n                    // Set the default height\r\n                    if (!this.options['height'] && inner.clientHeight > this.height) this.height = inner.clientHeight;\r\n                    // if (!this.options['height'] && inner.getBoundingClientRect().height > this.height) this.height = inner.getBoundingClientRect().height;\r\n\r\n                    // Fully loaded\r\n                    if (index + 1 == this.itemsCount) this.mediaLoaded = true;\r\n                };\r\n            }\r\n            // Others\r\n            else {\r\n                setTimeout(() => {\r\n                    // Fully loaded\r\n                    if (index + 1 == this.itemsCount) this.mediaLoaded = true;\r\n                }, 10);\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    /**\r\n     * @desc Sets Slideshow options\r\n     * \r\n     * @var {string}      controlsContent -- Slideshow controls (prev & next) HTML content\r\n     * @var {string}      dotsContent     -- Slideshow dots HTML content\r\n     * @var {HTMLElement} dots            -- Dots parent (container)\r\n     * @var {HTMLElement} captions        -- Captions parent (container)\r\n     * @var {HTMLElement} overlays        -- Overlays parent (container)\r\n     * @var {number}      windowWidth     -- Window available width\r\n     * @var {HTMLElement} inner           -- The inner media element\r\n     * @var {function}    interval        -- Slideshow size interval\r\n     * @var {string[]}    filterCls       -- the filter class list\r\n     * \r\n     * @return {void|boolean}\r\n     */\r\n    private setOptions(): void|boolean {\r\n        /**\r\n         *  Single & Multiple slide\r\n         */\r\n        if (this.itemsCount >= 1) {\r\n            // Check progress\r\n            if (this.options['hasProgress']) {\r\n                if (!this.slideshow.querySelector(`.${this.nameSlideshow + this.chiSep + this.nameSlideshowProgress}`)) {\r\n                    this.append(\"div\", this.slideshow, \"\", [this.nameSlideshow + this.chiSep + this.nameSlideshowProgress]);\r\n                }\r\n            }\r\n\r\n            // Check counter\r\n            if (this.options['hasCounter']) {\r\n                if (!this.slideshow.querySelector(`.${this.nameSlideshow + this.chiSep + this.nameSlideshowCounter}`)) {\r\n                    this.append(\"div\", this.slideshow, \"\", [this.nameSlideshow + this.chiSep + this.nameSlideshowCounter]);\r\n                }\r\n            }\r\n\r\n            // Check controls\r\n            if (this.options['hasControls']) {\r\n                if (!this.slideshow.querySelector(`.${this.nameSlideshow + this.chiSep + this.nameSlideshowPrev}`)) {\r\n                    const controlsContent:string = '&#10094;';\r\n\r\n                    this.append(\"div\", this.slideshow, controlsContent, [this.nameSlideshow + this.chiSep + this.nameSlideshowPrev]);\r\n                }\r\n                if (!this.slideshow.querySelector(`.${this.nameSlideshow + this.chiSep + this.nameSlideshowNext}`)) {\r\n                    const controlsContent:string = '&#10095;';\r\n\r\n                    this.append(\"div\", this.slideshow, controlsContent, [this.nameSlideshow + this.chiSep + this.nameSlideshowNext]);\r\n                }\r\n            }\r\n\r\n            // Check dots\r\n            if (this.options['hasDots']) {\r\n                if (!this.slideshow.querySelector(`.${this.nameSlideshow + this.chiSep + this.nameSlideshowDots}`)) {\r\n                    let dotsContent:string = '';\r\n\r\n                    for (let i = 0; i < this.itemsCount; i++) {\r\n                        this.slideshowItems[i].dataset.index = i;\r\n                        dotsContent += `<li data-index=\"${i}\"></li>`;\r\n                    }\r\n\r\n                    this.append(\"ul\", this.slideshow, dotsContent, [this.nameSlideshow + this.chiSep + this.nameSlideshowDots]);\r\n                }\r\n            }\r\n\r\n            // Update slide items\r\n            this.slideshowProgress = this.slideshow.querySelector(`.${this.nameSlideshow + this.chiSep + this.nameSlideshowProgress}`);\r\n            this.slideshowCounter  = this.slideshow.querySelector(`.${this.nameSlideshow + this.chiSep + this.nameSlideshowCounter}`);\r\n            this.slideshowPrev     = this.slideshow.querySelector(`.${this.nameSlideshow + this.chiSep + this.nameSlideshowPrev}`);\r\n            this.slideshowNext     = this.slideshow.querySelector(`.${this.nameSlideshow + this.chiSep + this.nameSlideshowNext}`);\r\n            this.slideshowDots     = this.slideshow.querySelectorAll(`.${this.nameSlideshow + this.chiSep + this.nameSlideshowDots} li`);\r\n\r\n            // Set the default dot\r\n            if (this.slideshowDots.length) {\r\n                // Set the active class\r\n                this.addClass(this.slideshowDots[0], this.nameActive);\r\n    \r\n                // Update the active dot\r\n                this.activeDot = this.slideshowDots[0];\r\n            }\r\n        }\r\n        \r\n        \r\n        /**\r\n         *  Single slide\r\n         */\r\n        if (this.itemsCount == 1) {\r\n            // Hide progress & controls\r\n            this.slideshowProgress.style.display = 'none';\r\n            this.slideshowPrev.style.display     = 'none';\r\n            this.slideshowNext.style.display     = 'none';\r\n\r\n            // Hide dots parent\r\n            this.slideshow.querySelector(`.${this.nameSlideshow + this.chiSep + this.nameSlideshowDots}`).style.display = 'none';\r\n        }\r\n\r\n\r\n        /**\r\n         *  Set slideshow width, height\r\n         */\r\n        let interval = setInterval(() => {\r\n            // Fully loaded\r\n            if (this.mediaLoaded) {\r\n                /**\r\n                 * Slideshow width\r\n                 */\r\n                // Check width property\r\n                if (this.options['width']) this.width = this.options['width'];\r\n\r\n                // Set slideshow width\r\n                if (this.options['width']) this.slideshow.style.maxWidth = this.options['width'];\r\n                else                       this.slideshow.style.maxWidth = this.width + 'px';\r\n\r\n                /**\r\n                 * Slideshow height\r\n                 */\r\n                // Check height property\r\n                if (this.options['height']) this.height = this.options['height'];\r\n                else if (this.height > window.innerHeight) this.height = window.innerHeight;\r\n\r\n                // Window width\r\n                const windowWidth = window.innerWidth;\r\n\r\n                // Desktop\r\n                if (windowWidth >= this.desktopWidth && this.options['desktopHeight']) {\r\n                    this.slideshow.style.height = this.options['desktopHeight'];\r\n                }\r\n                // Tablet\r\n                else if (windowWidth < this.desktopWidth && windowWidth >= this.tabletWidth && this.options['tabletHeight']) {\r\n                    this.slideshow.style.height = this.options['tabletHeight'];\r\n                }\r\n                // Smartphone\r\n                else if (windowWidth < this.tabletWidth && windowWidth >= this.phoneWidth && this.options['phoneHeight']) {\r\n                    this.slideshow.style.height = this.options['phoneHeight'];\r\n                }\r\n                // All devices\r\n                else {\r\n                    if (this.options['height']) this.slideshow.style.height = this.options['height'];\r\n                    else                        this.slideshow.style.height = this.height + 'px';\r\n                }\r\n\r\n                // Clear the interval\r\n                clearInterval(interval);\r\n            }\r\n        }, 10);\r\n\r\n\r\n        /**\r\n         *  Set slideshow color\r\n         */\r\n        if (this.options['color'] && this.options['color'] != 'auto') {\r\n            this.addClass(this.slideshow, this.nameSlideshow + this.modSep + this.options['color']);\r\n        }\r\n\r\n        \r\n        /**\r\n         *  Set slideshow filter\r\n         */\r\n         if (this.options['mediaFilter']) {\r\n            let filterCls : string[];\r\n\r\n            // Produce the filter class list\r\n            if (this.options['mediaFilter'] == 'auto') filterCls = [this.nameSlideshow + this.chiSep + this.nameSlideshowFilter];\r\n            else filterCls = [this.nameSlideshow + this.chiSep + this.nameSlideshowFilter, this.nameSlideshow + this.chiSep + this.nameSlideshowFilter + this.modSep + this.options['mediaFilter']];\r\n        \r\n            // Append the filter\r\n            this.append('div', this.slideshow, '', filterCls);\r\n        }\r\n\r\n\r\n        /**\r\n         *  Set slideshow roundness\r\n         */\r\n        if (this.options['round']) {\r\n            this.addClass(this.slideshow, this.nameSlideshow + this.modSep + this.nameRadius);\r\n        }\r\n\r\n\r\n        /**\r\n         *  Set slideshow positions\r\n         */\r\n        // Conter position\r\n        if (this.options['counterPosition']) {\r\n            // Check element existence\r\n            if (this.slideshowCounter) {\r\n                // Unset default positions\r\n                this.slideshowCounter.style.inset  = \"unset\";\r\n    \r\n                // Set alternative margin\r\n                if (['top', 'bottom'].includes(this.options['counterPosition'])) {\r\n                    this.slideshowCounter.style.margin = \"1rem 0\";\r\n                }\r\n                else if (['top-left', 'left', 'bottom-left', 'top-right', 'right', 'bottom-right'].includes(this.options['counterPosition'])) {\r\n                    this.slideshowCounter.style.margin = \"1rem\";\r\n                }\r\n                \r\n    \r\n                // Add position class\r\n                this.addClass(this.slideshowCounter, this.namePosition + this.modSep + this.options['counterPosition']);\r\n            }\r\n        }\r\n\r\n        // Dots position\r\n        if (this.options['dotsPosition']) {\r\n            const dots = this.slideshow.querySelector(`.${this.nameSlideshow + this.chiSep + this.nameSlideshowDots}`);\r\n\r\n            // Check element existence\r\n            if (dots) {\r\n                // Unset default positions\r\n                dots.style.inset  = \"unset\";\r\n    \r\n                // Set alternative margin\r\n                if (['top', 'bottom'].includes(this.options['dotsPosition'])) {\r\n                    dots.style.margin = \"1rem 0\";\r\n                }\r\n                else if (['top-left', 'left', 'bottom-left', 'top-right', 'right', 'bottom-right'].includes(this.options['dotsPosition'])) {\r\n                    dots.style.margin = \"1rem\";\r\n                }\r\n\r\n                // Add position class\r\n                this.addClass(dots, this.namePosition + this.modSep + this.options['dotsPosition']);\r\n            }\r\n        }\r\n\r\n        // Captions position\r\n        if (this.options['captionsPosition']) {\r\n            const captions = this.slideshow.querySelectorAll(`.${this.nameSlideshow + this.chiSep + this.nameSlideshowCaptions}`);\r\n\r\n            // Check element existence\r\n            if (captions.length) {\r\n                captions.forEach((caption:any) => {\r\n                    // Unset default positions\r\n                    caption.style.inset  = \"unset\";\r\n    \r\n                    // Set alternative margin\r\n                    if (['top', 'bottom'].includes(this.options['captionsPosition'])) {\r\n                        caption.style.margin = \"1rem 0\";\r\n                    }\r\n                    else if (['top-left', 'left', 'bottom-left', 'top-right', 'right', 'bottom-right'].includes(this.options['captionsPosition'])) {\r\n                        caption.style.margin = \"1rem\";\r\n                    }\r\n    \r\n                    // Add position class\r\n                    this.addClass(caption, this.namePosition + this.modSep + this.options['captionsPosition']);\r\n                });\r\n            }\r\n        }\r\n\r\n        // Overlays position\r\n        if (this.options['overlaysPosition']) {\r\n            const overlays = this.slideshow.querySelectorAll(`.${this.nameSlideshow + this.chiSep + this.nameSlideshowOverlays}`);\r\n\r\n            // Check element existence\r\n            if (overlays.length) {\r\n                overlays.forEach((overlay:any) => {\r\n                    // Unset default positions\r\n                    overlay.style.inset  = \"unset\";\r\n        \r\n                    // Set alternative margin\r\n                    if (['top', 'bottom'].includes(this.options['overlaysPosition'])) {\r\n                        overlay.style.margin = \"1rem 0\";\r\n                    }\r\n                    else if (['top-left', 'left', 'bottom-left', 'top-right', 'right', 'bottom-right'].includes(this.options['overlaysPosition'])) {\r\n                        overlay.style.margin = \"1rem\";\r\n                    }\r\n        \r\n                    // Add position class\r\n                    this.addClass(overlay, this.namePosition + this.modSep + this.options['overlaysPosition']);\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n        \r\n    /**\r\n     * @desc Handles prev control click\r\n     * \r\n     * @var {number} index -- Previous slide index\r\n     * \r\n     * @return {void}\r\n     */\r\n    private prevSlide(): void {\r\n        if (this.options['hasControls']) {\r\n            this.slideshowPrev.onclick = () => {\r\n                // Find previous index\r\n                let index:number = this.activeIndex - 1;\r\n\r\n                // Check index\r\n                if (index < 0) index = this.itemsCount - 1;\r\n\r\n                // Set slide\r\n                this.setSlide(index, 'previous');\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Handles next control click\r\n     * \r\n     * @var {number} index -- Next slide index\r\n     * \r\n     * @return {void}\r\n     */\r\n    private nextSlide(): void {\r\n        if (this.options['hasControls']) {\r\n            this.slideshowNext.onclick = () => {\r\n                // Find next index\r\n                let index:number = this.activeIndex + 1;\r\n\r\n                // Check index\r\n                if (index >= this.itemsCount) index = 0;\r\n\r\n                // Set slide\r\n                this.setSlide(index, 'next');\r\n            };\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Handles dots click\r\n     * \r\n     * @var {number} index -- Clicked slide index\r\n     * \r\n     * @return {void}\r\n     */\r\n    private dotSlide(): void {\r\n        if (this.options['hasDots']) {\r\n            this.slideshowDots.forEach((dot:any) => {\r\n                dot.onclick = () => {\r\n                    // Find index\r\n                    let index:number = Number(dot.dataset.index);\r\n\r\n                    // Set slide\r\n                    if (index != this.activeIndex) this.setSlide(index);\r\n                };\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Handles automatic slide\r\n     * \r\n     * @param {number} timeout -- Slideshow timeout\r\n     * \r\n     * @var   {number} remain  -- Remaining time\r\n     * \r\n     * @return {void}\r\n     */\r\n    private autoSlide(timeout:number = 0): void {\r\n        if (this.options['isAutoplay']) {\r\n            let remain:number;\r\n\r\n            // Set remain time\r\n            if (timeout) remain = timeout;\r\n            else         remain = this.options['timeout'];\r\n\r\n            // Set slide interval\r\n            this.slideInterval = setInterval(() => {\r\n                // Set next slide\r\n                if (!this.pauseIntervals) this.slideshowNext.click();\r\n                \r\n            }, remain);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Handles slideshow hover events\r\n     * \r\n     * @return {void}\r\n     */\r\n    private hoverEvents(): void {\r\n        // On hover\r\n        this.slideshow.onmouseover = () => {\r\n            // Pause the interval\r\n            this.pauseIntervals = true;\r\n\r\n            // Clear the interval\r\n            if (this.slideInterval) clearInterval(this.slideInterval);\r\n        };\r\n\r\n        // On leave hover\r\n        this.slideshow.onmouseleave = () => {\r\n            // Resume the interval\r\n            this.pauseIntervals = false;\r\n\r\n            // Clear the interval\r\n            if (this.slideInterval) clearInterval(this.slideInterval);\r\n\r\n            // Rerun the slideshow with the remaining time\r\n            this.autoSlide(this.remainingTime);\r\n\r\n            // Rerun the slide timer\r\n            this.slideTimer();\r\n        };\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Handles slideshow window events\r\n     * \r\n     * @var {number}      windowWidth -- Window available width\r\n     * @var {HTMLElement} inner       -- The inner media element\r\n     * \r\n     * @return {void}\r\n     */\r\n    private windowEvents(): void {\r\n        // Leave window\r\n        window.onblur = () => {\r\n            // Pause the media\r\n            // Video\r\n            if (this.activeItem.querySelector('video')) this.activeItem.querySelector('video').pause();\r\n\r\n            // Audio\r\n            if (this.activeItem.querySelector('audio')) this.activeItem.querySelector('audio').pause();\r\n\r\n            // Pause the interval\r\n            this.pauseIntervals = true;\r\n\r\n            // Clear the interval\r\n            if (this.slideInterval) clearInterval(this.slideInterval);\r\n        };\r\n        \r\n        // Show window\r\n        window.onfocus = () => {\r\n            // Reload the media\r\n            if (this.options['mediaAutoplay']) {\r\n                // Video\r\n                if (this.activeItem.querySelector('video')) {\r\n                    this.activeItem.querySelector('video').play();\r\n                }\r\n\r\n                // Audio\r\n                if (this.activeItem.querySelector('audio')) {\r\n                    this.activeItem.querySelector('audio').play();\r\n                }\r\n            }\r\n\r\n            // Resume the interval\r\n            this.pauseIntervals = false;\r\n\r\n            // Clear the interval\r\n            if (this.slideInterval) clearInterval(this.slideInterval);\r\n\r\n            // Rerun the slideshow with the remaining time\r\n            this.autoSlide(this.remainingTime);\r\n\r\n            // Rerun the slide timer\r\n            this.slideTimer();\r\n        };\r\n\r\n        // Window resize\r\n        window.onresize = () => {\r\n            // Reset height\r\n            this.height = 0;\r\n\r\n            // Check items media\r\n            this.slideshowMedias.forEach((media:any) => {\r\n                // Inner element\r\n                if (media.firstElementChild) {\r\n                    const inner = media.firstElementChild;\r\n\r\n                    // Set height property\r\n                    if (!this.options['height'] && inner.clientHeight > this.height) this.height = inner.clientHeight;\r\n                    if (!this.options['height'] && this.height > window.innerHeight) this.height = window.innerHeight;\r\n                    // if (!this.options['height'] && inner.getBoundingClientRect().height > this.height) this.height = inner.getBoundingClientRect().height;\r\n                }\r\n                // Only text\r\n                else {\r\n                    // Set height property\r\n                    if (!this.options['height'] && media.getBoundingClientRect().height > this.height) this.height = media.getBoundingClientRect().height;\r\n                }\r\n            });\r\n            \r\n            \r\n            /**\r\n             * Slideshow height\r\n             */\r\n            // Check height property\r\n            if (this.options['height']) this.height = this.options['height'];\r\n\r\n            // Window width\r\n            const windowWidth = window.innerWidth;\r\n\r\n            // Desktop\r\n            if (windowWidth >= this.desktopWidth && this.options['desktopHeight']) {\r\n                this.slideshow.style.height = this.options['desktopHeight'];\r\n            }\r\n            // Tablet\r\n            else if (windowWidth < this.desktopWidth && windowWidth >= this.tabletWidth && this.options['tabletHeight']) {\r\n                this.slideshow.style.height = this.options['tabletHeight'];\r\n            }\r\n            // Smartphone\r\n            else if (windowWidth < this.tabletWidth && windowWidth >= this.phoneWidth && this.options['phoneHeight']) {\r\n                this.slideshow.style.height = this.options['phoneHeight'];\r\n            }\r\n            // All devices\r\n            else {\r\n                if (this.options['height']) this.slideshow.style.height = this.options['height'];\r\n                else                        this.slideshow.style.height = this.height + 'px';\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Handles slideshow events\r\n     * \r\n     * @return {void}\r\n     */\r\n    private slideEvents(): void {\r\n        if (this.options['isAutoplay']) {\r\n            // Pause on hover\r\n            if (this.options['hoverPause']) {\r\n                // Hover events \r\n                this.hoverEvents();\r\n            }\r\n\r\n            // Window events\r\n            this.windowEvents();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Handles slides timer\r\n     * \r\n     * @var {number} progressWidth -- The slideshow progress width (0-100)\r\n     * \r\n     * @return {void}\r\n     */\r\n    private slideTimer():void {\r\n        // Clear the interval\r\n        if (this.timerInterval) clearInterval(this.timerInterval);\r\n\r\n        if (this.options['isAutoplay']) {\r\n            // Check progress option\r\n            if (!this.pauseIntervals) {\r\n                let progressWidth:number;\r\n\r\n                // Default remaining time\r\n                if (this.remainingTime <= 0) this.remainingTime = this.options['timeout'];\r\n\r\n                // Set timer interval\r\n                this.timerInterval = setInterval(() => {\r\n                    // Set remaining time\r\n                    this.remainingTime -= 10;\r\n\r\n                    // Produce progress width\r\n                    progressWidth = 100 - ((this.remainingTime / this.options['timeout']) * 100);\r\n\r\n                    // Set the progress width\r\n                    if (this.options['hasProgress']) this.slideshowProgress.style.width = progressWidth + '%';\r\n\r\n                    // Check pause or remaining time\r\n                    if (this.pauseIntervals || this.remainingTime <= 0) {\r\n                        clearInterval(this.timerInterval);\r\n                        \r\n                        if (this.remainingTime <= 0 && this.options['hasProgress']) this.slideshowProgress.style.width = '0%';\r\n                    }\r\n\r\n                }, 10);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @desc Sets a slide\r\n     * \r\n     * @param {number} index -- The index number\r\n     * @param {number} mode -- The slide mode (next, previous)\r\n     * \r\n     * @var {HTMLElement}   slide            -- The slideshow item (slide)\r\n     * @var {HTMLElement}   media            -- The item media\r\n     * @var {HTMLElement[]} overlays         -- The item overlays\r\n     * @var {HTMLElement[]} captions         -- The item captions\r\n     * @var {string}        mediaAnimation   -- The media animation\r\n     * @var {string}        overlayAnimation -- A specefic overlay animation\r\n     * @var {string}        captionAnimation -- A specefic caption animation\r\n     * @var {string}        slideMode        -- The slide mode {next, previous}\r\n     * \r\n     * @return {void}\r\n     */\r\n    private setSlide(index:number, mode:null|string = null): void {\r\n        // Check sliding\r\n        if (!this.sliding) {\r\n            // Reset the timer\r\n            this.remainingTime = 0;\r\n\r\n            // Clear the timer interval\r\n            if (this.timerInterval) clearInterval(this.timerInterval);\r\n\r\n            // Reset the progress\r\n            if (this.options['hasProgress']) this.slideshowProgress.style.width = '0%';\r\n\r\n            // Start sliding\r\n            this.sliding = true;\r\n\r\n            // Stop the slide interval\r\n            if (this.slideInterval) clearInterval(this.slideInterval);\r\n    \r\n            // Rest the progressbar\r\n            if (this.options['hasProgress']) this.slideshowProgress.style.width = '0%'\r\n    \r\n            // Default vaiables\r\n            let slide:any, media:any, overlays:any[], captions:any[];\r\n            let mediaAnimation:string, overlayAnimation:string, captionAnimation:string;\r\n            let slideMode:string;\r\n    \r\n            // Set mode\r\n            if (mode)                           slideMode = mode;\r\n            else if (index >= this.activeIndex) slideMode = 'next';\r\n            else                                slideMode = 'previous';\r\n    \r\n    \r\n            /**\r\n             * Old (current) Slide\r\n             */\r\n            if (!this.firstLoad) {\r\n                // Fetch old slide items\r\n                slide    = this.slideshowItems[this.activeIndex];\r\n                media    = slide.querySelector(`.${this.nameSlideshow + this.chiSep + this.nameSlideshowMedia}`);\r\n                overlays = slide.querySelectorAll(`.${this.nameSlideshow + this.chiSep + this.nameSlideshowOverlay}`);\r\n                captions = slide.querySelectorAll(`.${this.nameSlideshow + this.chiSep + this.nameSlideshowCaption}`);\r\n        \r\n                // Fetch the active slide & dot\r\n                this.activeItem = this.slideshow.querySelector(`.${this.nameSlideshow + this.chiSep + this.nameSlideshowItem}.${this.nameActive}`);\r\n                this.activeDot  = this.slideshow.querySelector(`.${this.nameSlideshow + this.chiSep + this.nameSlideshowDots} li.${this.nameActive}`);\r\n        \r\n                // Remove active class\r\n                this.removeClass(this.activeItem, this.nameActive);\r\n        \r\n                // Remove active dot class\r\n                if (this.activeDot) {\r\n                    // Remove active class\r\n                    this.removeClass(this.activeDot, this.nameActive);\r\n                }\r\n        \r\n                // Hide media\r\n                if (media) {\r\n                    // Pause the media\r\n                    // Video\r\n                    if (media.querySelector('video')) media.querySelector('video').pause();\r\n\r\n                    // Audio\r\n                    if (media.querySelector('audio')) media.querySelector('audio').pause();\r\n    \r\n                    // Find animation\r\n                    if (media.dataset.exit)                                            mediaAnimation = media.dataset.exit;\r\n                    else if (media.dataset.exitPrev && slideMode == 'previous')        mediaAnimation = media.dataset.exitPrev;\r\n                    else if (media.dataset.exitNext && slideMode == 'next')            mediaAnimation = media.dataset.exitNext;\r\n                    else if (this.options['mediaExit'])                                mediaAnimation = this.options['mediaExit'];\r\n                    else if (this.options['mediaExitPrev'] && slideMode == 'previous') mediaAnimation = this.options['mediaExitPrev'];\r\n                    else if (this.options['mediaExitNext'] && slideMode == 'next')     mediaAnimation = this.options['mediaExitNext'];\r\n                    else                                                               mediaAnimation = this.animationExit;\r\n        \r\n                    // Set animation\r\n                    this.animation(media, mediaAnimation);\r\n                }\r\n        \r\n                // Hide overlays\r\n                if (overlays.length) {\r\n                    overlays.forEach((overlay:any) => {\r\n                        // Find animation\r\n                        if (overlay.dataset.exit)                                            overlayAnimation = overlay.dataset.exit;\r\n                        else if (overlay.dataset.exitPrev && slideMode == 'previous')        overlayAnimation = overlay.dataset.exitPrev;\r\n                        else if (overlay.dataset.exitNext && slideMode == 'next')            overlayAnimation = overlay.dataset.exitNext;\r\n                        else if (this.options['overlayExit'])                                overlayAnimation = this.options['overlayExit'];\r\n                        else if (this.options['overlayExitPrev'] && slideMode == 'previous') overlayAnimation = this.options['overlayExitPrev'];\r\n                        else if (this.options['overlayExitNext'] && slideMode == 'next')     overlayAnimation = this.options['overlayExitNext'];\r\n                        else                                                                 overlayAnimation = this.animationExit;\r\n        \r\n                        // Set animation\r\n                        this.animation(overlay, overlayAnimation);\r\n                    });\r\n                }\r\n                \r\n                // Hide captions\r\n                if (captions.length) {\r\n                    captions.forEach((caption:any) => {\r\n                        // Find animation\r\n                        if (caption.dataset.exit)                                            captionAnimation = caption.dataset.exit;\r\n                        else if (caption.dataset.exitPrev && slideMode == 'previous')        captionAnimation = caption.dataset.exitPrev;\r\n                        else if (caption.dataset.exitNext && slideMode == 'next')            captionAnimation = caption.dataset.exitNext;\r\n                        else if (this.options['captionExit'])                                captionAnimation = this.options['captionExit'];\r\n                        else if (this.options['captionExitPrev'] && slideMode == 'previous') captionAnimation = this.options['captionExitPrev'];\r\n                        else if (this.options['captionExitNext'] && slideMode == 'next')     captionAnimation = this.options['captionExitNext'];\r\n                        else                                                                 captionAnimation = this.animationExit;\r\n        \r\n                        // Set animation\r\n                        this.animation(caption, captionAnimation);\r\n                    });\r\n                }\r\n            }\r\n    \r\n    \r\n            /**\r\n             * New Slide\r\n             */\r\n            // Update the first load\r\n            if (this.firstLoad) this.firstLoad = false;\r\n\r\n            // Find new slide items\r\n            slide    = this.slideshowItems[index];\r\n            media    = slide.querySelector(`.${this.nameSlideshow + this.chiSep + this.nameSlideshowMedia}`);\r\n            overlays = slide.querySelectorAll(`.${this.nameSlideshow + this.chiSep + this.nameSlideshowOverlay}`);\r\n            captions = slide.querySelectorAll(`.${this.nameSlideshow + this.chiSep + this.nameSlideshowCaption}`);\r\n    \r\n            // Update the active item\r\n            this.activeItem = slide;\r\n    \r\n            // Add active class to slide\r\n            this.addClass(slide, this.nameActive);\r\n    \r\n            // Add active class to relative dot\r\n            this.slideshowDots.forEach((dot:any) => {\r\n                if (Number(dot.dataset.index) == index) {\r\n                    this.addClass(dot, this.nameActive);\r\n    \r\n                    // Update the active dot\r\n                    this.activeDot = dot;\r\n                }\r\n            });\r\n    \r\n            // Show media\r\n            if (media) {\r\n                // Reload the media\r\n                if (this.options['mediaAutoplay']) {\r\n                    // Video\r\n                    if (media.querySelector('video')) {\r\n                        media.querySelector('video').load();\r\n                        media.querySelector('video').play();\r\n                    }\r\n\r\n                    // Audio\r\n                    if (media.querySelector('audio')) {\r\n                        media.querySelector('audio').load();\r\n                        media.querySelector('audio').play();\r\n                    }\r\n                }\r\n\r\n                // Find animation\r\n                if (media.dataset.enter)                                            mediaAnimation = media.dataset.enter;\r\n                else if (media.dataset.enterPrev && slideMode == 'previous')        mediaAnimation = media.dataset.enterPrev;\r\n                else if (media.dataset.enterNext && slideMode == 'next')            mediaAnimation = media.dataset.enterNext;\r\n                else if (this.options['mediaEnter'])                                mediaAnimation = this.options['mediaEnter'];\r\n                else if (this.options['mediaEnterPrev'] && slideMode == 'previous') mediaAnimation = this.options['mediaEnterPrev'];\r\n                else if (this.options['mediaEnterNext'] && slideMode == 'next')     mediaAnimation = this.options['mediaEnterNext'];\r\n                else                                                                mediaAnimation = this.animationEnter;\r\n    \r\n                // Set animation\r\n                this.animation(media, mediaAnimation).then(() => {\r\n                    // Clear the timer interval\r\n                    if (this.timerInterval) clearInterval(this.timerInterval);\r\n\r\n                    // Stop the intervals\r\n                    if (this.slideInterval) clearInterval(this.slideInterval);\r\n                    \r\n                    // Run Autoplay\r\n                    this.autoSlide();\r\n    \r\n                    // Run timer\r\n                    this.slideTimer();\r\n\r\n                    // Stop sliding\r\n                    this.sliding = false;\r\n                });\r\n            }\r\n    \r\n            // Show overlays\r\n            if (overlays.length) {\r\n                overlays.forEach((overlay:any) => {\r\n                    // Find animation\r\n                    if (overlay.dataset.enter)                                            overlayAnimation = overlay.dataset.enter;\r\n                    else if (overlay.dataset.enterPrev && slideMode == 'previous')        overlayAnimation = overlay.dataset.enterPrev;\r\n                    else if (overlay.dataset.enterNext && slideMode == 'next')            overlayAnimation = overlay.dataset.enterNext;\r\n                    else if (this.options['overlayEnter'])                                overlayAnimation = this.options['overlayEnter'];\r\n                    else if (this.options['overlayEnterPrev'] && slideMode == 'previous') overlayAnimation = this.options['overlayEnterPrev'];\r\n                    else if (this.options['overlayEnterNext'] && slideMode == 'next')     overlayAnimation = this.options['overlayEnterNext'];\r\n                    else                                                                  overlayAnimation = this.animationEnter;\r\n    \r\n                    // Set animation\r\n                    this.animation(overlay, overlayAnimation);\r\n                });\r\n            }\r\n            \r\n            // Show captions\r\n            if (captions.length) {\r\n                captions.forEach((caption:any) => {\r\n                    // Find animation\r\n                    if (caption.dataset.enter)                                            captionAnimation = caption.dataset.enter;\r\n                    else if (caption.dataset.enterPrev && slideMode == 'previous')        captionAnimation = caption.dataset.enterPrev;\r\n                    else if (caption.dataset.enterNext && slideMode == 'next')            captionAnimation = caption.dataset.enterNext;\r\n                    else if (this.options['captionEnter'])                                captionAnimation = this.options['captionEnter'];\r\n                    else if (this.options['captionEnterPrev'] && slideMode == 'previous') captionAnimation = this.options['captionEnterPrev'];\r\n                    else if (this.options['captionEnterNext'] && slideMode == 'next')     captionAnimation = this.options['captionEnterNext'];\r\n                    else                                                                  captionAnimation = this.animationEnter;\r\n    \r\n                    // Set animation\r\n                    this.animation(caption, captionAnimation);\r\n                });\r\n            }\r\n    \r\n            // Set counter\r\n            if (this.options['hasCounter']) this.slideshowCounter.innerHTML = `${Number(slide.dataset.index) + 1}/${this.itemsCount}`;\r\n    \r\n            // Update active index\r\n            this.activeIndex = index;\r\n        }\r\n    }\r\n\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * Polaris Slideshow Plugin v1.2.1\r\n * MIT License github.com/heminsatya/polaris-plugins | © 2022 polarisui.com\r\n**/\r\n/**\r\n * Import the Core Class\r\n */ \r\nimport {Slideshow} from \"./modules/Slideshow\";\r\n\r\n\r\n/**\r\n * Export default\r\n */\r\nexport default Slideshow;"],"names":[],"sourceRoot":""}